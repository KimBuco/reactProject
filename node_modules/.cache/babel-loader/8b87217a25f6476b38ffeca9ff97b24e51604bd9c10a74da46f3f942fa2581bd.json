{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ReactFirstProject\\\\react-task-tracker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Task from \"./components/Task\";\nimport AddTask from \"./components/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTask = async () => {\n      const taskFromServer = await fetchTasks();\n      setTasks(taskFromServer);\n    };\n    getTask();\n  }, []);\n\n  //FetchTask\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  };\n\n  //FetchTask\n\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  //AddTask\n\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n\n    // const id = Math.floor(Math.random() * 1000) + 1\n    // const newTask = {id, ...task}\n    // setTasks([...tasks, newTask])\n  };\n\n  //Delete\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  //Toggle Reminder\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Task Tracker\",\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Task, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this) : 'No Task To Show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Task","AddTask","jsxDEV","_jsxDEV","App","_s","showAddTask","setShowAddTask","tasks","setTasks","getTask","taskFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","map","reminder","className","children","title","onAdd","showAdd","fileName","_jsxFileName","lineNumber","columnNumber","length","onDelete","onToggle","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/ReactFirstProject/react-task-tracker/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport Header from \"./components/Header\";\nimport Task from \"./components/Task\";\nimport AddTask from \"./components/AddTask\";\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState (false)\n\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTask = async () => {\n      const taskFromServer = await fetchTasks()\n      setTasks(taskFromServer)\n    }\n\n    getTask()\n  }, [])\n\n\n//FetchTask\n\nconst fetchTasks = async () => {\n  const res = await fetch('http://localhost:5000/tasks')\n  const data = await res.json()\n  return data\n}\n\n//FetchTask\n\nconst fetchTask = async (id) => {\n  const res = await fetch(`http://localhost:5000/tasks/${id}`)\n  const data = await res.json()\n  return data\n}\n\n\n\n//AddTask\n\nconst addTask = async (task) => {\n  const res = await fetch('http://localhost:5000/tasks', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(task),\n  })\n\n  const data = await res.json()\n  setTasks([...tasks, data])\n\n\n  // const id = Math.floor(Math.random() * 1000) + 1\n  // const newTask = {id, ...task}\n  // setTasks([...tasks, newTask])\n\n}\n\n\n//Delete\n\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n//Toggle Reminder\n\nconst toggleReminder = (id) => {\n  setTasks(\n      tasks.map((task) => \n      task.id === id\n  ? {...task, reminder: !task.reminder} : task))\n\n}\n\n  return (\n    <div className=\"container\">  \n      <Header title=\"Task Tracker\" onAdd={() => setShowAddTask(!showAddTask)}\n      showAdd = {showAddTask} />\n      {showAddTask && <AddTask onAdd = {addTask}/>}\n      {tasks.length > 0 ?\n      <Task tasks={tasks}\n      onDelete={deleteTask}\n      onToggle = {toggleReminder}\n      /> : 'No Task To Show'}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}