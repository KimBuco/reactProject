{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ReactFirstProject\\\\react-task-tracker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Header from \"./components/Header\";\nimport Task from \"./components/Task\";\nimport AddTask from \"./components/AddTask\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTask = async () => {\n      const taskFromServer = await fetchTasks();\n      setTasks(taskFromServer);\n    };\n    getTask();\n  }, []);\n\n  //FetchTask\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  };\n\n  //FetchTask\n\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  //AddTask\n\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n\n    // const id = Math.floor(Math.random() * 1000) + 1\n    // const newTask = {id, ...task}\n    // setTasks([...tasks, newTask])\n  };\n\n  //Delete\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  //Toggle Reminder\n\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = {\n      ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application-json'\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Task Tracker\",\n        onAdd: () => setShowAddTask(!showAddTask),\n        showAdd: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n              onAdd: addTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 31\n            }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Task, {\n              tasks: tasks,\n              onDelete: deleteTask,\n              onToggle: toggleReminder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this) : 'No Tasks To Show']\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Router","Route","Routes","Header","Task","AddTask","Footer","About","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","showAddTask","setShowAddTask","tasks","setTasks","getTask","taskFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","reminder","map","children","className","title","onAdd","showAdd","fileName","_jsxFileName","lineNumber","columnNumber","path","element","length","onDelete","onToggle","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/ReactFirstProject/react-task-tracker/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport Header from \"./components/Header\";\nimport Task from \"./components/Task\";\nimport AddTask from \"./components/AddTask\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState (false)\n\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTask = async () => {\n      const taskFromServer = await fetchTasks()\n      setTasks(taskFromServer)\n    }\n\n    getTask()\n  }, [])\n\n\n//FetchTask\n\nconst fetchTasks = async () => {\n  const res = await fetch('http://localhost:5000/tasks')\n  const data = await res.json()\n  return data\n}\n\n//FetchTask\n\nconst fetchTask = async (id) => {\n  const res = await fetch(`http://localhost:5000/tasks/${id}`)\n  const data = await res.json()\n  return data\n}\n\n\n\n//AddTask\n\nconst addTask = async (task) => {\n  const res = await fetch('http://localhost:5000/tasks', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(task),\n  })\n\n  const data = await res.json()\n  setTasks([...tasks, data])\n\n\n  // const id = Math.floor(Math.random() * 1000) + 1\n  // const newTask = {id, ...task}\n  // setTasks([...tasks, newTask])\n\n}\n\n\n//Delete\n\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n//Toggle Reminder\n\nconst toggleReminder = async (id) => {\n  const taskToToggle = await fetchTask(id)\n  const updTask = {...taskToToggle, \n  reminder: !taskToToggle.reminder}\n\n  const res = await fetch (`http://localhost:5000/tasks/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application-json'\n    },\n    body: JSON.stringify(updTask)\n  })\n\n  const data = await res.json()\n\n  setTasks(\n      tasks.map((task) => \n      task.id === id\n  ? {...task, reminder: !task.reminder} : task))\n\n}\n\n  return (\n    <Router>\n      <div className=\"container\">  \n        <Header title=\"Task Tracker\" onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd = {showAddTask} />\n        <Routes>\n          <Route path=\"/\" element = {\n            <>\n              {showAddTask && <AddTask onAdd={addTask} />}\n              {tasks.length > 0 ? (\n                <Task\n                  tasks={tasks}\n                  onDelete={deleteTask}\n                  onToggle={toggleReminder}\n                />\n              ) : (\n                'No Tasks To Show'\n              )}\n            \n            </>\n          } />\n          <Route path = '/about' element = {<About />} />\n        </Routes>\n        <Footer />\n      </div>  \n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}